{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/chris/dev/tasklister/tasklister/src/containers/TaskContainer.js\";\nimport React, { Component } from 'react';\nimport TaskList from '../components/TaskList';\nimport { connect } from 'react-redux';\nimport { addTask, removeTask } from '../actions/TaskActions';\n\nclass TaskContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addTask = newTask => {\n      fetch('http://localhost:3001/tasks', this.createConfigObj('POST', newTask));\n      this.props.dispatch(addTask(newTask));\n    };\n\n    this.deleteTask = key => {\n      this.props.dispatch(removeTask(key));\n      const task = this.props.tasks.find(td => td.key === key);\n      fetch('http://localhost:3001/tasks/' + key, this.createConfigObj('DELETE', task));\n    };\n\n    this.createConfigObj = (method, body) => {\n      return {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      };\n    };\n\n    this.renderTasks = taskObj => {\n      return taskObj.data.map(task => this.props.dispatch(addTask(task.attributes)));\n    };\n\n    this.handleSubmit = (event, id) => {\n      event.preventDefault();\n      this.deleteTask(id);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/tasks').then(res => res.json()).then(tasks => {\n      return this.renderTasks(tasks);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TaskList, {\n        title: \"My Tasks\",\n        tasks: this.props.tasks,\n        addTask: this.addTask,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps)(TaskContainer);","map":{"version":3,"sources":["/mnt/c/Users/chris/dev/tasklister/tasklister/src/containers/TaskContainer.js"],"names":["React","Component","TaskList","connect","addTask","removeTask","TaskContainer","newTask","fetch","createConfigObj","props","dispatch","deleteTask","key","task","tasks","find","td","method","body","headers","JSON","stringify","renderTasks","taskObj","data","map","attributes","handleSubmit","event","id","preventDefault","componentDidMount","then","res","json","render","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,wBAApC;;AAGA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAClCG,OADkC,GACxBG,OAAO,IAAI;AACjBC,MAAAA,KAAK,CAAC,6BAAD,EAAgC,KAAKC,eAAL,CAAqB,MAArB,EAA6BF,OAA7B,CAAhC,CAAL;AACA,WAAKG,KAAL,CAAWC,QAAX,CAAoBP,OAAO,CAACG,OAAD,CAA3B;AACH,KAJiC;;AAAA,SAMlCK,UANkC,GAMrBC,GAAG,IAAI;AAChB,WAAKH,KAAL,CAAWC,QAAX,CAAoBN,UAAU,CAACQ,GAAD,CAA9B;AACA,YAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,IAAjB,CAAsBC,EAAE,IAAIA,EAAE,CAACJ,GAAH,KAAWA,GAAvC,CAAb;AACAL,MAAAA,KAAK,CAAC,iCAAiCK,GAAlC,EAAuC,KAAKJ,eAAL,CAAqB,QAArB,EAA+BK,IAA/B,CAAvC,CAAL;AACH,KAViC;;AAAA,SAYlCL,eAZkC,GAYhB,CAACS,MAAD,EAASC,IAAT,KAAkB;AAChC,aAAO;AACHD,QAAAA,MAAM,EAAEA,MADL;AAEHE,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFN;AAKHD,QAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf;AALH,OAAP;AAOH,KApBiC;;AAAA,SAsBlCI,WAtBkC,GAsBpBC,OAAO,IAAI;AACrB,aAAOA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBZ,IAAI,IAAI,KAAKJ,KAAL,CAAWC,QAAX,CAAoBP,OAAO,CAACU,IAAI,CAACa,UAAN,CAA3B,CAAzB,CAAP;AACH,KAxBiC;;AAAA,SA0BlCC,YA1BkC,GA0BnB,CAACC,KAAD,EAAQC,EAAR,KAAe;AAC1BD,MAAAA,KAAK,CAACE,cAAN;AACA,WAAKnB,UAAL,CAAgBkB,EAAhB;AACH,KA7BiC;AAAA;;AA+BlCE,EAAAA,iBAAiB,GAAG;AAChBxB,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACKyB,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUlB,KAAK,IAAI;AACX,aAAO,KAAKQ,WAAL,CAAiBR,KAAjB,CAAP;AACH,KAJL;AAKH;;AAEDqB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWK,KAA7C;AAAoD,QAAA,OAAO,EAAE,KAAKX,OAAlE;AAA2E,QAAA,YAAY,EAAE,KAAKwB;AAA9F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA7CiC;;AAgDtC,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAEvB,IAAAA,KAAK,EAAEuB,KAAK,CAACvB;AAAf,GAAP;AACH,CAFD;;AAIA,eAAeZ,OAAO,CAACkC,eAAD,CAAP,CAAyB/B,aAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport TaskList from '../components/TaskList'\r\nimport { connect } from 'react-redux'\r\nimport { addTask, removeTask } from '../actions/TaskActions'\r\n\r\n\r\nclass TaskContainer extends Component {\r\n    addTask = newTask => {\r\n        fetch('http://localhost:3001/tasks', this.createConfigObj('POST', newTask))\r\n        this.props.dispatch(addTask(newTask))\r\n    }\r\n\r\n    deleteTask = key => {\r\n        this.props.dispatch(removeTask(key))\r\n        const task = this.props.tasks.find(td => td.key === key)\r\n        fetch('http://localhost:3001/tasks/' + key, this.createConfigObj('DELETE', task))\r\n    }\r\n\r\n    createConfigObj = (method, body) => {\r\n        return {\r\n            method: method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n    }\r\n\r\n    renderTasks = taskObj => {\r\n        return taskObj.data.map(task => this.props.dispatch(addTask(task.attributes)))\r\n    }\r\n\r\n    handleSubmit = (event, id) => {\r\n        event.preventDefault()\r\n        this.deleteTask(id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:3001/tasks')\r\n            .then(res => res.json())\r\n            .then(tasks => {\r\n                return this.renderTasks(tasks)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TaskList title='My Tasks' tasks={this.props.tasks} addTask={this.addTask} handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { tasks: state.tasks }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TaskContainer)"]},"metadata":{},"sourceType":"module"}